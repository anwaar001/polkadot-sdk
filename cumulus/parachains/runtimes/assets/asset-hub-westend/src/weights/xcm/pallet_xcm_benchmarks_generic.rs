// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_xcm_benchmarks::generic`
//!
<<<<<<< HEAD
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-10-26, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `runner-vmdtonbz-project-674-concurrent-0`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! WASM-EXECUTION: Compiled, CHAIN: Some("asset-hub-westend-dev"), DB CACHE: 1024
=======
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2025-03-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `539ea74f622e`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))

// Executed Command:
// target/production/polkadot-parachain
// benchmark
// pallet
// --steps=50
// --repeat=20
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --json-file=/builds/parity/mirrors/polkadot-sdk/.git/.artifacts/bench.json
// --pallet=pallet_xcm_benchmarks::generic
// --chain=asset-hub-westend-dev
// --header=./cumulus/file_header.txt
// --template=./cumulus/templates/xcm-bench-template.hbs
// --output=./cumulus/parachains/runtimes/assets/asset-hub-westend/src/weights/xcm/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weights for `pallet_xcm_benchmarks::generic`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo<T> {
	// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
	// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
	// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::VersionDiscoveryQueue` (r:1 w:1)
	// Proof: `PolkadotXcm::VersionDiscoveryQueue` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SafeXcmVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SafeXcmVersion` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
	// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
	// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	pub fn report_holding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `246`
		//  Estimated: `6196`
<<<<<<< HEAD
		// Minimum execution time: 415_033_000 picoseconds.
		Weight::from_parts(429_573_000, 6196)
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(4))
=======
		// Minimum execution time: 99_866_000 picoseconds.
		Weight::from_parts(104_089_000, 6196)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn buy_execution() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 3_193_000 picoseconds.
		Weight::from_parts(3_620_000, 0)
=======
		// Minimum execution time: 625_000 picoseconds.
		Weight::from_parts(699_000, 0)
	}
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	pub fn pay_fees() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `3593`
		// Minimum execution time: 6_146_000 picoseconds.
		Weight::from_parts(6_457_000, 3593)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	pub fn asset_claimer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 684_000 picoseconds.
		Weight::from_parts(749_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `PolkadotXcm::Queries` (r:1 w:0)
	// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	pub fn query_response() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `103`
		//  Estimated: `3568`
		// Minimum execution time: 8_045_000 picoseconds.
		Weight::from_parts(8_402_000, 3568)
=======
		//  Measured:  `0`
		//  Estimated: `3465`
		// Minimum execution time: 5_437_000 picoseconds.
		Weight::from_parts(5_762_000, 3465)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	pub fn transact() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 9_827_000 picoseconds.
		Weight::from_parts(10_454_000, 0)
=======
		// Minimum execution time: 7_301_000 picoseconds.
		Weight::from_parts(7_556_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn refund_surplus() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 3_330_000 picoseconds.
		Weight::from_parts(3_677_000, 0)
=======
		// Minimum execution time: 2_685_000 picoseconds.
		Weight::from_parts(2_784_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn set_error_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_947_000 picoseconds.
		Weight::from_parts(2_083_000, 0)
=======
		// Minimum execution time: 634_000 picoseconds.
		Weight::from_parts(713_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn set_appendix() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_915_000 picoseconds.
		Weight::from_parts(1_993_000, 0)
=======
		// Minimum execution time: 600_000 picoseconds.
		Weight::from_parts(693_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn clear_error() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_918_000 picoseconds.
		Weight::from_parts(2_048_000, 0)
=======
		// Minimum execution time: 613_000 picoseconds.
		Weight::from_parts(664_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn descend_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 2_683_000 picoseconds.
		Weight::from_parts(3_064_000, 0)
=======
		// Minimum execution time: 673_000 picoseconds.
		Weight::from_parts(727_000, 0)
	}
	pub fn execute_with_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 734_000 picoseconds.
		Weight::from_parts(783_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn clear_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_893_000 picoseconds.
		Weight::from_parts(2_159_000, 0)
=======
		// Minimum execution time: 595_000 picoseconds.
		Weight::from_parts(674_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
	// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
	// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::VersionDiscoveryQueue` (r:1 w:1)
	// Proof: `PolkadotXcm::VersionDiscoveryQueue` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SafeXcmVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SafeXcmVersion` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
	// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
	// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	pub fn report_error() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `246`
		//  Estimated: `6196`
<<<<<<< HEAD
		// Minimum execution time: 53_116_000 picoseconds.
		Weight::from_parts(54_154_000, 6196)
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(4))
=======
		// Minimum execution time: 66_354_000 picoseconds.
		Weight::from_parts(68_615_000, 6196)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `PolkadotXcm::AssetTraps` (r:1 w:1)
	// Proof: `PolkadotXcm::AssetTraps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	pub fn claim_asset() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `160`
		//  Estimated: `3625`
		// Minimum execution time: 12_381_000 picoseconds.
		Weight::from_parts(12_693_000, 3625)
=======
		//  Measured:  `23`
		//  Estimated: `3488`
		// Minimum execution time: 8_810_000 picoseconds.
		Weight::from_parts(9_020_000, 3488)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	pub fn trap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_933_000 picoseconds.
		Weight::from_parts(1_983_000, 0)
=======
		// Minimum execution time: 3_258_000 picoseconds.
		Weight::from_parts(3_447_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `PolkadotXcm::VersionNotifyTargets` (r:1 w:1)
	// Proof: `PolkadotXcm::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
	// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::VersionDiscoveryQueue` (r:1 w:1)
	// Proof: `PolkadotXcm::VersionDiscoveryQueue` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SafeXcmVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SafeXcmVersion` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
	// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
	// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	pub fn subscribe_version() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `145`
		//  Estimated: `3610`
		// Minimum execution time: 24_251_000 picoseconds.
		Weight::from_parts(24_890_000, 3610)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
=======
		//  Measured:  `42`
		//  Estimated: `3507`
		// Minimum execution time: 22_785_000 picoseconds.
		Weight::from_parts(23_226_000, 3507)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `PolkadotXcm::VersionNotifyTargets` (r:0 w:1)
	// Proof: `PolkadotXcm::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	pub fn unsubscribe_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 3_850_000 picoseconds.
		Weight::from_parts(4_082_000, 0)
=======
		// Minimum execution time: 2_642_000 picoseconds.
		Weight::from_parts(2_872_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	pub fn burn_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 112_248_000 picoseconds.
		Weight::from_parts(124_454_000, 0)
=======
		// Minimum execution time: 23_421_000 picoseconds.
		Weight::from_parts(23_829_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn expect_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 11_457_000 picoseconds.
		Weight::from_parts(12_060_000, 0)
=======
		// Minimum execution time: 6_496_000 picoseconds.
		Weight::from_parts(6_603_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn expect_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_959_000 picoseconds.
		Weight::from_parts(2_076_000, 0)
=======
		// Minimum execution time: 3_339_000 picoseconds.
		Weight::from_parts(3_473_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn expect_error() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_920_000 picoseconds.
		Weight::from_parts(1_994_000, 0)
=======
		// Minimum execution time: 3_284_000 picoseconds.
		Weight::from_parts(3_459_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn expect_transact_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 2_149_000 picoseconds.
		Weight::from_parts(2_394_000, 0)
=======
		// Minimum execution time: 798_000 picoseconds.
		Weight::from_parts(838_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
	// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
	// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::VersionDiscoveryQueue` (r:1 w:1)
	// Proof: `PolkadotXcm::VersionDiscoveryQueue` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SafeXcmVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SafeXcmVersion` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
	// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
	// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	pub fn query_pallet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `246`
		//  Estimated: `6196`
<<<<<<< HEAD
		// Minimum execution time: 58_011_000 picoseconds.
		Weight::from_parts(59_306_000, 6196)
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(4))
=======
		// Minimum execution time: 72_359_000 picoseconds.
		Weight::from_parts(74_856_000, 6196)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn expect_pallet() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 5_031_000 picoseconds.
		Weight::from_parts(5_243_000, 0)
=======
		// Minimum execution time: 5_079_000 picoseconds.
		Weight::from_parts(5_323_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
	// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
	// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::VersionDiscoveryQueue` (r:1 w:1)
	// Proof: `PolkadotXcm::VersionDiscoveryQueue` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `PolkadotXcm::SafeXcmVersion` (r:1 w:0)
	// Proof: `PolkadotXcm::SafeXcmVersion` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
	// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
	// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	pub fn report_transact_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `246`
		//  Estimated: `6196`
<<<<<<< HEAD
		// Minimum execution time: 53_078_000 picoseconds.
		Weight::from_parts(54_345_000, 6196)
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(4))
=======
		// Minimum execution time: 66_954_000 picoseconds.
		Weight::from_parts(69_560_000, 6196)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn clear_transact_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_936_000 picoseconds.
		Weight::from_parts(2_002_000, 0)
=======
		// Minimum execution time: 662_000 picoseconds.
		Weight::from_parts(735_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn set_topic() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_855_000 picoseconds.
		Weight::from_parts(1_950_000, 0)
=======
		// Minimum execution time: 592_000 picoseconds.
		Weight::from_parts(681_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn clear_topic() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_882_000 picoseconds.
		Weight::from_parts(1_977_000, 0)
=======
		// Minimum execution time: 585_000 picoseconds.
		Weight::from_parts(655_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
	// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	pub fn universal_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `1489`
<<<<<<< HEAD
		// Minimum execution time: 3_912_000 picoseconds.
		Weight::from_parts(4_167_000, 1489)
=======
		// Minimum execution time: 5_229_000 picoseconds.
		Weight::from_parts(5_466_000, 1489)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	pub fn set_fees_mode() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_911_000 picoseconds.
		Weight::from_parts(1_971_000, 0)
=======
		// Minimum execution time: 594_000 picoseconds.
		Weight::from_parts(663_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
	pub fn unpaid_execution() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_990_000 picoseconds.
		Weight::from_parts(2_076_000, 0)
=======
		// Minimum execution time: 631_000 picoseconds.
		Weight::from_parts(695_000, 0)
	}
	pub fn alias_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 621_000 picoseconds.
		Weight::from_parts(690_000, 0)
>>>>>>> c4b8ec1 (Use non-native token to benchmark xcm on asset hub (#7893))
	}
}
